/* Day 3: Rearrange Lights

Diwali, the festival of lights, is here, and Meera is getting ready to illuminate her house. She has a series of lights, each representing a different Diwali lamp. The brightness of each lamp is symbolized by a positive integer in an array. Meera wants to create a stunning Diwali display, and she can achieve this by rotating the array in a specific direction and a certain number of times. The direction and the number of rotations are determined by two integers: direction and noOfRotations.

Rules for rotation:

The direction can have value either 0 or 1
If direction is 0, Meera should rotate the array to the left by noOfRotations time, and
If direction is 1, Meera should rotate the array to the right by noOfRotations time
Input Format

The First line will indicate T, the number of testcases
The First line of each testcase will contain direction, noOfRotations and number of lights in series N.
The Second line of each testcase is series of lights, where L[i] represents brightness of each light.
Constraints

1<=T<=500
direction = {0,1}
1<=noOfRotations<=N<=1000
1<=L[i]<=10,000
Output Format

For each testcase after performing the rotation, output the arrangement of lights in the array, showcasing the vibrant Diwali atmosphere she has created.

Sample Input 0

1
0 3 9
1 2 3 4 5 6 7 8 9
Sample Output 0

4 5 6 7 8 9 1 2 3
Explanation 0

directrion = 0
noOfRotations = 3
N = 9
therefore, we rotate the array to left by 3 lights */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    int i,j,k,I,T,direction,noOfRotations,L[1000],N,temp;
    scanf("%d",&T);
    for(i=0;i<T;i++){
        scanf("%d",&direction);
        scanf("%d",&noOfRotations);
        scanf("%d",&N);
        for(I=0;I<N;I++){
            scanf("%d",&L[I]);
        }
        if(direction==1){
            for(i=0;i<noOfRotations;i++){
                temp=L[N-1];
                for(j=N-1;j>=0;j--){
                    L[j]=L[j-1];
                }
                L[0]=temp;
            }
        }
        else if(direction==0){
            for(i=0;i<noOfRotations;i++){
                temp=L[0];
                for(j=0;j<N-1;j++){
                    L[j]=L[j+1];
                }
                L[N-1]=temp;
            }
        }
        for(k=0;k<N;k++){
            printf("%d ",L[k]);
            
        }
        
    }

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}

