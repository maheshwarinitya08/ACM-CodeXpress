/* Day19: Third Farthest Galaxy
Suppose you have a array of numbers dist, of n elements that represent the distances of some galaxies from Earth in light-years. Find the third farthest galaxy in this list. If there are less than three distinct distances, output the farthest one.

Input Format

The first line will give T, the number of testcases.
The first line of each testcase will give n, the number of elements in dist.
The second line of each testcase will give array dist.
Constraints

1<=T<=1000
1<=n<=10,000
-2^31 <= dist[i] <= 2^31 - 1
Output Format

For each testcase output the third farthest galaxy in this list, If there are less than three distinct distances, output the farthest one.

Sample Input 0

1
3
3 2 1
Sample Output 0

1  */
#include <stdio.h>
#include <stdlib.h>

// Comparator function for sorting in descending order
int compare(const void *a, const void *b) {
    return (*(int *)b - *(int *)a);
}

int main() {
    int T;
    scanf("%d", &T);

    while (T--) {
        int n;
        scanf("%d", &n);

        int dist[n];
        for (int i = 0; i < n; ++i) {
            scanf("%d", &dist[i]);
        }

        // Sort the distances in descending order
        qsort(dist, n, sizeof(int), compare);

        int thirdFarthest = dist[0];

        // Find the third farthest galaxy or output the farthest one if less than three distinct distances
        int uniqueDistances = 1;
        for (int i = 1; i < n; ++i) {
            if (dist[i] != dist[i - 1]) {
                uniqueDistances++;
            }
            if (uniqueDistances == 3) {
                thirdFarthest = dist[i];
                break;
            }
        }

        printf("%d\n", thirdFarthest);
    }

    return 0;
}

